# Default values for app-python.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: tufra/moscow-time-app-python
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.0.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "app-python-service-account"

podAnnotations:
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

podManagementPolicy: Parallel

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 1
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

livenessProbe:
  timeoutSeconds: 10
  httpGet:
    path: /
    port: http
readinessProbe:
  timeoutSeconds: 10
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: config
    configMap:
      name: app-python-config
      items:
        - key: config.json
          path: config.json
  - name: init-dir
    emptyDir: {}
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: visits
    mountPath: /app/visits
  - name: init-dir
    mountPath: "/init-dir"
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

envs:
  - name: FIRST_ENV
    value: first_env
  - name: SECOND_ENV
    value: second_env

volumeClaimTemplates:
  - metadata:
      name: visits
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Mi

initContainers:
  - name: init
    image: busybox:1.28
    command:
      - wget
      - "-O"
      - "/init-dir/index.html"
      - http://info.cern.ch
    volumeMounts:
      - name: init-dir
        mountPath: "/init-dir"

  - name: init-2
    image: busybox:1.28
    command:
      - sh
      - "-c"
      - "echo 'init 2 output' >> /init-dir/index.html"
    volumeMounts:
      - name: init-dir
        mountPath: "/init-dir"

  - name: init-3
    image: busybox:1.28
    command:
      - sh
      - "-c"
      - "echo 'init 3 output' >> /init-dir/index.html"
    volumeMounts:
      - name: init-dir
        mountPath: "/init-dir"